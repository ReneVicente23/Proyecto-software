
swagger: '2.0'
info:
  title: Mascotas API
  description: Modelado de endpoins para la API de mascotas perdidas
  version: 1.0.0

tags:
  - name: "auth"
    description: "Autenticacion de usuarios"
  - name: "user"
    description: "Administracion de usuarios"
  - name: "pet"
    description: "Administracion de mascotas respecto a un usuario"
  - name: "neigh"
    description: "Registrarse en grupos de zonas"
  - name: "lostPetList"

paths:


  /auth:
    ### Informacion del usuario
    post:
      tags:
        - "auth"
      summary: Autenticar al usuario
      description: |
        Autenticar al usuario que ha iniciado sesión
      parameters:
      - name: userlogin
        in: body
        description: usuario y contraseña
        required: true
        schema: 
          required:
            - usermail
            - hashpassword
          properties:
            usermail: 
              type: string
              example: example@gmail.com
            hashpasword:
              type: string
              example: fads5f4a65f4ad65f4a65f4a6798e7wr8q7wer9q7wer87qr97
      responses:
        200:
          description: Información del perfil
          schema:             
            $ref: '#/definitions/InfoProfile' 
        401:
          description: Usuario o contraseña incorrecto
      produces:
        - application/json
  
  /user:
    ### Registrar usuario
    post:
      tags:
      - "user"
      summary: Registrar nuevo usuario
      description: |
        Enviar una solicitud de registro de usuario
      parameters:
      - name: userinfo
        in: body
        description: Informacion del usuario al que se quiere registrar
        required: true
        schema: 
          required:
            - usermail
            - hashpassword
            - name
            - lastname
            - aditionalcontactinfo
          properties:
            usermail: 
              type: string
              example: example@gmail.com
            hashpasword:
              type: string
              example: ra564ga654g87973167dfgassf
            name:
              type: string
              example: Juan Paco Pedro
            lastname:
              type: string
              example: De La Mar            
            aditionalcontactinfo:
              type: boolean
              example: telefono 123456789
      responses:
        200:
          description: Solicitud de guardado exitosa
        403:
          description: No se pudo enviar la solicitud
      produces:
        - application/json        
      consumes:        
        - application/json 
    
    
  /user/{userid}/pet:

    ## Lista de mascotas   
    get:
      tags:
      - "pet"
      summary: Obtener la lista de mascotas registradas del usuario
      description: |
       Obtener la lista de mascotas del usuario que ha iniciado sesión
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      responses:
        200:
          description: Lista de mascotas registradas
          schema:
            type: array
            items:
              $ref: '#/definitions/PetList'
        403:
          description: No se pudo obtener la lista de mascotas
      produces:
        - application/json 
    
    ### Registrar una mascota a un usuario 
    post:
      tags:
      - "pet"
      summary: Registrar nueva mascota
      description: |
        Enviar una solicitud de registro de mascota
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: petinfo
        in: body
        description: Informacion de la mascota que se quiere registrar
        required: true
        schema: 
          required:
            - petname
            - petbreed
            - petage
            - petgender
            - pettraits
            - petcare
            - petaditionalcontactinfo
          properties:
            petname: 
              type: string
              example: Señor Perro
            petbreed:
              type: string
              example: Gato Persa
            petage:
              type: string
              example: 1 año
            petgender:
              type: string
              example: macho
            pettraits:
              type: string
              example: Pelaje atigrado gris
            petcare:
              type: string
              example: Gotas para los ojos
            petaditionalcontactinfo:
              type: boolean
              example: telefono 23145679
      responses:
        200:
          description: Solicitud de guardado exitosa
        403:
          description: No se pudo enviar la solicitud
      produces:
        - application/json        
      consumes:        
        - application/json 
        
      
  /user/{userid}/pet/{idpet}:  
    
    ## Obtener una mascota especifica   
    get:
      tags:
      - "pet"
      summary: Obtener una mascota especifica registrada al usuario
      description: |
        Obtener una mascota especifica registrada al usuario que ha iniciado sesión
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: idpet
        in: path
        description: Referencia de la mascota del usuario
        required: true
        type: integer
      responses:
        200:
          description: Lista de mascotas registradas
          schema:
            type: array
            items:
              $ref: '#/definitions/PetList'
        403:
          description: No se pudo obtener la mascota
      produces:
        - application/json
  
    ### Modificar una mascota de un usuario 
    put:
      tags:
      - "pet"
      summary: Modificar una mascota
      description: |
        Enviar una solicitud de modificacion de una mascota
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: idpet
        in: path
        description: Referencia de la mascota del usuario
        required: true
        type: integer
      - name: petinfo
        in: body
        description: Informacion de la mascota que se quiere reescribir
        required: true
        schema: 
          required:
            - petname
            - petbreed
            - petage
            - petgender
            - pettraits
            - petcare
            - petaditionalcontactinfo
          properties:
            petname: 
              type: string
              example: Señor Perro
            petbreed:
              type: string
              example: Gato Persa
            petage:
              type: string
              example: 1 año
            petgender:
              type: string
              example: macho
            pettraits:
              type: string
              example: Pelaje atigrado gris
            petcare:
              type: string
              example: Gotas para los ojos
            petaditionalcontactinfo:
              type: boolean
              example: telefono 23145679
      responses:
        200:
          description: Actualizacion exitosa
        403:
          description: No se pudo completar la solicitud
      produces:
        - application/json        
      consumes:        
        - application/json 

  /user/{userid}/pet/{idpet}/image:
    ## Imagen de una mascota
    get:
      tags:
      - "pet"
      summary: Obtener la imagen asociada a un registro de mascota
      description: |
       Obtener la URL de imagen asociada a un registro de mascota
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: idpet
        in: path
        description: Referencia de la mascota del usuario
        required: true
        type: integer
      responses:
        200:
          description: imagen
          schema:
            type: string
            example: /9j/4AAQSkZJRgABAQAAAQABAAD/2wCEAAUFBQUFBQUGBgUICAcICAsKCQkKCxEMDQwNDBEaEBMQEBMQGhcbFhUWGxcpIBwcICkvJyUnLzkzMzlHREddXX0BBQUFBQUFBQYGBQgIBwgICwoJCQoLEQwNDA0MERoQExAQExAaFxsWFRYbFykgHBwgKS8nJScvOTMzOUdER11dff/CABEIAccC2AMBIQACEQEDEQH/xAAcAAACAwEBAQE...
            
        403:
          description: No se pudo obtener la imagen de la mascota
      produces:
        - multipart/form-data
 
    
    ### Registrar una imagen a una mascota de un usuario 
    post:
      tags:
      - "pet"
      summary: Registrar una imagen a una mascota
      description: |
        Enviar una solicitud de registro de imagen de una mascota
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: idpet
        in: path
        description: Referencia de la mascota del usuario
        required: true
        type: integer
      - name: file
        in: formData  
        description: The uploaded file data
        required: true
        type: file     
      responses:
        200:
          description: Solicitud de guardado exitosa
        403:
          description: No se pudo enviar la solicitud
      produces:
        - multipart/form-data        
      consumes:        
        - multipart/form-data
        
### Modificar la imagen de una mascota
    put:
      tags:
      - "pet"
      summary: Modificar la imagen de una mascota
      description: |
        Enviar una solicitud de modificacion de una mascota
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: idpet
        in: path
        description: Referencia de la mascota del usuario
        required: true
        type: integer
      - name: file
        in: formData  
        description: The uploaded file data
        required: true
        type: file     
      responses:
        200:
          description: Actualizacion exitosa
        403:
          description: No se pudo completar la solicitud
      produces:
        - multipart/form-data 
      consumes:        
        - multipart/form-data 
        
  /user/{userid}:
     get:
      tags:
      - "neigh"
      summary: Obtener datos del usuario
      description: |
       Obtener datos del usuario
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      responses:
        200:
          description: Lista de mascotas registradas
          schema:
            type: array
            items:
              $ref: '#/definitions/UserList'
        403:
          description: No se pudo obtener la lista de mascotas
      produces:
        - application/json 

  /user/{userid}/neigh:
    post:
      tags:
        - "neigh"
      summary: Registrarse en un grupo de la zona
      description: |
        Enviar una solicitud d registro a un grupo de Telegram de una zona 
      parameters:
      - name: userid
        in: path
        description: grupo de Telegram
        required: true
        type: integer
      - name: neighid
        in: body
        description: Zona a la que se quiere unir
        required: true
        schema:
          required:
            - zona
            - calle_avenida
            - numero
          properties:
            zona:
              type: string
              example: Achumani
            calle_avenida:
              type: string 
              example: Avenida The Strongest
            numero:
              type: number
              example: 512
      responses:
        200:
          description: Solicitud de registo en grupo exitoso
        403:
          description: No se pudo enviar la solicitud
        505:
          description: Tiempo de espera al servidor agotado
      produces:
        - application/json        
      consumes:        
        - application/json 

  /user/{userid}/neigh/{neighid}:
    get: 
      tags:
      - "neigh"
      summary: Obtener la zona donde el usuario esta registrado
      description: |
        Obtener una zona especifica donde el usuario se registro
      parameters:
        - name: userid
          in: path
          description: Datos del usuario
          required: true
          type: integer
        - name: neighid
          in: path
          description: Datos de la zona
          required: true
          type: integer
      responses:
        200:
          description: List de usuario registrados en zonas"
          schema:
            type: array
            items:
              $ref: '#/definitions/NeighborsList'
        400:
          description: No se pudo obtener la zona en la que el usuario se registro
      produces:
        - application/json

  /lostPetList{lostPetListId}/{neighid}/{idpet}:
    get:
      tags:
        - "lostPetList"
      summary: Obtener el reporte de mascotas perdidas por zonas
      description: |
        Obtener la lista de mascotas perdidas en una zona especifica
      parameters:
      - name: lostPetListId
        in: path
        description: lost pet id
        required: true
        type: integer
      - name: neighid
        in: path
        description: Datos de la zona
        required: true
        type: integer
      - name: idpet
        in: path
        description: Datos de la mascota
        required: true
        type: integer
      responses:
        200:
          description: Lista de mascotas perdidas por zonas
          schema:
            type: array
            items: 
              $ref: '#/definitions/lostpetlist'
        400:
          description: No se pudo obtener la lista de mascotas perdidas en esta zona
      produces:
        - application/json

  /user/{userid}/pet/{idpet}/petfound:

    ## Mascotas encontradas   
    get:
      tags:
      - "pet"
      summary: Obtener la lista de mascotas encontradas
      description: |
       Obtener la lista de mascotas encontradas
      parameters:
      - name: userid
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      - name: idpet
        in: path
        description: Referencia de usuario
        required: true
        type: integer
      responses:
        200:
          description: Mascotas encontradas
          schema:
            type: array
            items:
              $ref: '#/definitions/petfound'
        403:
          description: No exite mascotas encontradas
      produces:
        - application/json

  /user/{userid}/pet/{idpet}/reportpet:
    get:
      tags:
        - "pet"
      summary: Obtener el reporte de mascotas perdidas
      description: |
        Obtener el reporte de mascotas perdidas
      parameters:
      - name: userid
        in: path
        description: Datos de la mascota
        required: true
        type: integer
      - name: idpet
        in: path
        description: Datos de la mascota
        required: true
        type: integer
      responses:
        200:
          description: Reporte de mascotas perdidas
          schema:
            type: array
            items: 
              $ref: '#/definitions/reportpet'
        400:
          description: No se pudo obtener la lista de mascotas perdidas en esta zona
      produces:
        - application/json

### Modifacar datos del usuaio
  /user/change/{userid}:
    put:  
      tags:
        - "user"
      summary: Modificar los datos del usuario
      description: |
        modifiar datos de un usuario especifico
      parameters:
        - name: userid
          in: path
          description: Datos del Usuario
          required: true
          type: integer
        - name: userid
          in: body
          description: Nuevos datos del usuario
          required: true
          schema:
            required:
              - username
              - userlastname
              - contraseña
              - contactos
            properties:
              username:
                type: string
                example: Felipe
              userlastname:
                type: string
                example: Gonzales
              contraseña:
                type: string
                example: nueva
              contactos:
                type: string
                example: 77454545
      responses:
          200:
            description: modificacion de datos del usuario exitosa
          400: 
            description: error en la sintaxis 
          504: 
            description: Eror, Tiempo de espera agotado 
      produces:
          - application/json
      consumes:
          - application/json

  
definitions:

  UserList:
    type: object
    required: 
    - userid
    - username
    properties:
      userid:
        type: integer
        example: 125
      username:
        type: string
        example: Juan
      userlastname:
        type: string
        example: Paco
      usermail:
        type: string 
        example: juanpaco@gmail.com
      useradditionalcontacts:
        type: number
        example: 77777777

  petfound:
    type: object
    required:
    - userid
    properties:
      petname:
        type: string
        example: Beily
      petbreed:
        type: string
        example: Sharpei
      petage:
        type: string
        example: 2 años
      petgender:
        type: string
        example: Macho
      pettraits:
        type: string
        example: Beige
      petzone:
        type: string
        example: Sopocachi
      petfoundnameperson:
        type: string
        example: Ricardo Lopez
      petfoundday:
        type: string
        example: 14/07/2022
      petfoundhour:
        type: string
        example: 14:07

  reportpet:
    type: object
    required:
    - idpet
    properties:
      petname:
        type: string
        example: Beily
      petbreed:
        type: string
        example: Sharpei
      petage:
        type: string
        example: 2 años
      petgender:
        type: string
        example: Macho
      featurespet:
        type: string
        example: Pelaje color beige con blanco
      specialpet:
        type: string
        example: Usa Gotas para los ojos cada 12 horas por operacion reciente
      petcontact:
        type: integer
        example: 76897625
      petzone:
        type: string
        example: obrajes
      petfoundday:
        type: string
        example: 14/07/2022
      petfoundnameperson:
        type: string
        example: Ricardo Lopez

  NeighborsList:
    type: object
    required:
    - name
    - lastname
    - correo
    - contacto
    - zona
    - calle_avenida
    - numero
    properties:
      name:
        type: string
        example: juan
      lastname:
        type: string
        example: Paco
      correo:
        type: string
        example: juanpaco@gmail.com
      contacto:
        type: number
        example: 777777777
      zona:
        type: string
        example: Achumani
      calle_avenida:
        type: string
        example: Avenida The Strongest
      numero: 
        type: number
        example: 512


  lostpetlist:
    type: object
    required:
    - idpet
    - petname
    - raza
    - neighid
    - zonaExtravio
    - petage
    - petSex
    - petColor
    - FechaExtravio
    - HoraExtravio
    - PersonaQuienReporto
    properties:
      idpet:
        type: integer
        example: 452
      petname:
        type: string
        example: Asgard
      raza:
        type: string
        example: Caracachan
      neighid:
        type: integer
        example: 145
      zonaExtravio:
        type: string
        example: Bajo Llojeta
      petage:
        type: string
        example: 1 año
      petSex:
        type: string
        example: macho
      petColor:
        type: string
        example: Blanco con Negro
      FechaExtravio:
        type: string
        example: 10 de septiembre de 2021
      HoraExtravio:
        type: string
        example: 10:30 AM
      PersonaQuienReporto:
        type: string
        example: Jose Pozo
      
  
  InfoProfile:
    type: object
    properties:
      userid:
        type: integer
        example: 25
      name:
        type: string
        example: Juan Paco 
      lastname:
        type: string
        example: Pedro D.LaMar
      aditionalcontacts:
        type: string
        example: Telefono 123456789
     
  PetList:
    type: object
    required:
    - userid
    properties:
      petid:
        type: integer
        example: 156
      petname:
        type: string
        example: Señor Gato
      petbreed:
        type: string
        example: Perro mestizo
      petage:
        type: string
        example: 2 años
      petgender:
        type: string
        example: Macho
      pettraits:
        type: string
        example: Pelaje atigrado
      petcare:
        type: string
        example: Ninguno
      petaditionalcontactinfo:
        type: string
        example: Ninguno
